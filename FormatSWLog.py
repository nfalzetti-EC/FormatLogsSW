import os
print("Saving to:", os.getcwd())

def extract_fields_and_generate_html(file_path):
    # Read the log file
    with open(file_path, 'r', encoding='utf-8', errors='ignore') as f:
        lines = f.readlines()

    # Extract relevant lines
    header_line = lines[3]
    data_line = lines[4]
    footer_line = lines[6]

    # Extract fields from the data line using fixed-width slicing based on header
    timestamp = data_line[0:19].strip()
    event_id = data_line[20:24].strip()
    category = data_line[30:55].strip()
    group = data_line[55:85].strip()
    event_type = data_line[85:130].strip()
    priority = data_line[130:160].strip()
    message = data_line[-200:].strip()

    # Network and session info (hardcoded for now)
    src_interface = "a4:f9:33:cc:19:b5 (INTEL)"
    dst_interface = "2c:68:ed:64:49:28 (SONICWALL)"
    src_ip = "10.0.31.6"
    dst_ip = "23.62.106.139"
    src_port = "61611"
    dst_port = "443"
    src_mac = "X2"
    dst_mac = "CORPORATE"
    src_vendor = "StringAlert 2048"
    dst_vendor = "X0:V30 LAN"
    protocol = "tcp"
    rx_bytes = "443"
    tx_bytes = "tcp"
    session_time = "1424 seconds"
    application = "Microsoft Copilot"
    generated_by = footer_line.strip()

    # Return the HTML content
    return f"""<html>
<head><title>SonicWall Log Report</title></head>
<body>
<h2>Security Event Log Summary</h2>
<p><strong>Generated by:</strong> {generated_by}</p>
<p><strong>Timestamp:</strong> {timestamp}</p>
<p><strong>Event ID:</strong> {event_id}</p>
<p><strong>Category:</strong> {category}</p>
<p><strong>Group:</strong> {group}</p>
<p><strong>Type:</strong> {event_type}</p>
<p><strong>Priority:</strong> {priority}</p>
<p><strong>Message:</strong> {message}</p>

<h3>Network Details</h3>
<table border="1">
<tr><th>Field</th><th>Value</th></tr>
<tr><td>Source IP</td><td>{src_ip}</td></tr>
<tr><td>Source Port</td><td>{src_port}</td></tr>
<tr><td>Source MAC</td><td>{src_mac}</td></tr>
<tr><td>Source Interface</td><td>{src_interface}</td></tr>
<tr><td>Source Vendor</td><td>{src_vendor}</td></tr>
<tr><td>Destination IP</td><td>{dst_ip}</td></tr>
<tr><td>Destination Port</td><td>{dst_port}</td></tr>
<tr><td>Destination MAC</td><td>{dst_mac}</td></tr>
<tr><td>Destination Interface</td><td>{dst_interface}</td></tr>
<tr><td>Destination Vendor</td><td>{dst_vendor}</td></tr>
<tr><td>Protocol</td><td>{protocol}</td></tr>
</table>

<h3>Traffic and Session Info</h3>
<table border="1">
<tr><th>Field</th><th>Value</th></tr>
<tr><td>RX Bytes</td><td>{rx_bytes}</td></tr>
<tr><td>TX Bytes</td><td>{tx_bytes}</td></tr>
<tr><td>Session Time</td><td>{session_time}</td></tr>
<tr><td>Application</td><td>{application}</td></tr>
</table>
</body>
</html>
"""

# Call the function and capture the returned HTML
html_content = extract_fields_and_generate_html(r"X:\Downloads\log_input.txt")

# Write to file
output_path = r"X:\Downloads\sonicwall_report.html"
with open(output_path, "w", encoding="ascii", errors="ignore") as f:
    f.write(html_content)
